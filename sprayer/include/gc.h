#pragma once

// Included by gened_code.h
// Things that are commonly required for projects generated by spraygen.

typedef unsigned char         u8;
typedef unsigned short        u16;
typedef unsigned int          u32;
typedef unsigned __int64      u64;
typedef signed char           i8;
typedef signed short          i16;
typedef signed int            i32;
typedef signed __int64        i64;

typedef void*                 pvoid;
typedef float                 floa;


// 
#define UNINIT 0xcf
#define UNK -1
#define AT(arr, byteofs) *((std::remove_reference<decltype( *arr )>::type*)((char*)arr+byteofs))

// Utils
// INCREMENT_DWORD and DECREMENT_DWORD
// These are not INTERLOCKED by interface! They may be DEFINED as interlocked as detail, when there are no other choice.
#ifdef _DEBUG
// In Debug build, the compiler would generate 'mov rax, [var]; inc rax; mov [var], rax' code
// for both prefix and postfix ++
// We need special rules for this
#define INCREMENT_DWORD(x) InterlockedIncrement(&x)
#define DECREMENT_DWORD(x) InterlockedDecrement(&x)
#else
// *** Implying InterlockedIncrement will have the same effect as just 'inc [var]' ***
// #LossingInterlocked
// In Release build, ++ generates a single inc instruction so we just use it
#define INCREMENT_DWORD(x) (x)++
#define DECREMENT_DWORD(x) (x)--
#endif


// I forgot why.. Feel guilty
#include <type_traits> 
#include <stdio.h>
#include <ctype.h>

